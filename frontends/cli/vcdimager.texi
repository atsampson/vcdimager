\input texinfo @c -*-texinfo-*-

@c %**start of header
@setfilename vcdimager.info
@settitle The GNU Video CD Image Maker
@setchapternewpage on
@c %**end of header

@afourpaper

@include version.texi

@ifinfo
This file documents GNU VCDImager, The GNU Video CD Image Maker

Copyright (C) Herbert Valerio Riedel @email{hvr@@gnu.org}

@sp 2
Permission is granted to make and distributed verbatim copies of this
manual, provided the copyright notice and this permission notice are
preserved on all copies. 

@ignore
Permission is granted to process this file through TeX and print the 
results, provided the printed document carries copying permission notice 
identical to this one except for the removal of this paragraph (this 
paragraph not being relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation
approved by Herbert Valerio Riedel.
@end ifinfo

@titlepage
@title GNU VCDImager
@subtitle $Id$
@subtitle The GNU Video CD Image Maker
@subtitle for version @value{VERSION}, @value{UPDATED}
@author Herbert Valerio Riedel

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2001 Herbert Valerio Riedel @email{<hvr@@gnu.org>}
@sp 1
Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that the
section entitled ``GNU General Public License'' are included exactly as
in the original, and provided that the entire resulting derived work is
distributed under the terms of a permission notice identical to this
one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that the sections entitled ``GNU General Public License'' may be
included in a translation approved by the Free Software Foundation
instead of in the original English.
@end titlepage

@c @summarycontents
@contents

@dircategory Miscellaneous
@direntry
* VCDImager: (vcdimager).      The GNU Video CD Image Maker
* VCDRip: (vcdimager).         The GNU Video CD Image Ripper
@end direntry

@node Top, , (dir), (dir)

@unnumbered Introduction

This manual describes the @dfn{GNU VCDImager}@footnote{see
@url{http://www.gnu.org/software/vcdimager/}} package, which provides a
front end, @file{vcdimager}, for generating @acronym{CD-ROM} image files
suitable for being burned to CD recordables. It takes @acronym{MPEG}
movie files as input and generates an image file and a cue-sheet file
which can be fed to any CD-recording program which understands the
@acronym{BIN/CUE}-format, like cdrdao@footnote{see
@url{http://www.ping.de/sites/daneb/cdrdao.html}} for instance.

@noindent
Features of the back end library@footnote{the core of the GNU VCDImager
package consists of a library named @code{libvcd}, the front ends are
just user interfaces to the exported C-API}, on which all front ends
relay, include:

@itemize @bullet
@item
Video CD 1.1 image output support

@item
Video CD 2.0 image output support

@item
Super Video CD 1.0 image output support

@item
general facility for adding files as mode 2 form 1 and 2 sectors to
the @acronym{ISO9660} file-system and setting the @acronym{ISO9660}
volume label and application id fields.

@item
support for up to 98 @acronym{MPEG} tracks per (Super) Video CD.

@item
supports 99 minute @acronym{CD-R} media@footnote{...though most devices
will have problems with such out of specification media. You may want
use the @option{--sector-2336} option for images longer than 80
minutes}.

@end itemize

Also contained in this package is @file{vcdrip}, a tool for dumping
information about (Super) Video CD image files@footnote{on Linux it is
supported to operate directly on @acronym{CD-ROM} devices} and
extracting the contained @acronym{MPEG}-streams.

@c well well well
@include gpl.texi

@chapter Video CD Concepts

This chapter gives some background information regarding the underlying
Video CD technology.

@strong{Warning:} All information given in this chapter is given without
any warranty of accuracy or correctness. You are encouraged to send
corrections and improvements for this manual to
@email{bug-vcdimager@@gnu.org}.

@section General Information

The Video Compact Disc (@dfn{Video CD} or @dfn{VCD}) is a standardized
digital video storage format. It is based on the commonly available
Compact Disc technology, which allows for low cost video authoring.
Video CDs can be played in most @acronym{DVD} stand-alone player,
dedicated VCD players and finally most modern computer based systems
with multimedia support.

@section Anatomy of Video CDs

In general the layout of a Video CD is made up of the following areas:

@itemize @bullet
@item
ISO9660 data track

@itemize @bullet
@item
ISO9660 structure at @code{00:02:00}, consisting of 16 empty sectors,
primary volume descriptor (@dfn{PVD}) and directory records with file
pointers to the later mentioned information area structures and external
pointers to @acronym{MPEG}/@acronym{CD-DA} tracks following the ISO9660 data track.

@item
Karaoke area at @code{00:03:00}

@item
Video CD information area at @code{00:04:00}

@item
optional segment play item area with @acronym{MPEG} items aligned in 150
sector segments

@item
optional program and data file area, for additional files added to the
ISO9660 track

@end itemize

@item
up to 98 @acronym{MPEG} mode 2 form 2 or @acronym{CD-DA} tracks embedded in lead-in and
lead-out empty sectors.

@end itemize

@section Known Video CD Flavors

There are different Video CD flavors commonly used. The following
sections tries to explain the differences amongst them.

@subsection Video CD 1.1

This is the most basic Video CD specification dating back to
1993@footnote{actually this flavor was based on the Karaoke-CD, which
was the first @acronym{MPEG} based @acronym{CD-ROM} format.}, which has
the following characteristics:

@itemize @bullet
@item
one mode 2 mixed form ISO9660 track containing file pointers to the
information areas

@item
up to 98 multiplexed @acronym{MPEG}-1 audio/video streams or
@acronym{CD-DA} audio tracks

@item
up to 500 @acronym{MPEG} track entry points

@end itemize

The Video CD specification requires the multiplexed @acronym{MPEG}-1
stream to have a @acronym{CBR} of about 174300 bytes per
second@footnote{2324 bytes of payload per sector * 75 sectors per second
= 174300 bytes per second} in order to accommodate single speed
@acronym{CD-ROM} drives. The @acronym{CBR} @acronym{MPEG}-1, layer II
audio stream is fixed at 224kbps with 1 stereo or 2 mono channels. 
to have one of the following two resolutions:

@itemize @bullet
@item
352 x 240 @@ 29.97 Hz (@acronym{NTSC})
@item
352 x 240 @@ 23.976 Hz (@acronym{FILM})
@end itemize

@subsection Video CD 2.0

About two years after the Video CD 1.1 specification came out, an
improved Video CD 2.0 standard was published. This one added the
following items to the features already available in the 1.1
specification:

@itemize @bullet
@item
Support for (optional) @acronym{MPEG} segment play items (@dfn{SPI}),
consisting of still pictures, motion pictures or audio streams, was
added.

@item
Support for (optional) interactive playback control (@dfn{PBC}) was
added.

@item
Support for (optional) playing related access by providing a scan point
index file was added (@file{EXT/SCANDATA.DAT})

@end itemize

@noindent
By adding PAL support to the Video CD 1.1 specification, the following
resolution become available:
@itemize @bullet
@item
352 x 240 @@ 29.97 Hz (@acronym{NTSC})
@item
352 x 240 @@ 23.976 Hz (@acronym{FILM})
@item
352 x 288 @@ 25 Hz (@acronym{PAL})
@end itemize

@subsection Extended Video CD

Also known as @dfn{XVCD}, this is not an official standard. It's
actually just a name for VCDs trying to break conformance to the
official standards in order to use the additional performance of the
@acronym{DVD} decoders and thus achieve better image quality. Such a
XVCD may be unsupported by many available stand-alone playing devices.

@subsection Super Video CD 1.0

With the upcoming of the @acronym{DVD} media, a new VCD standard had to
be published in order to be able to keep up with technology, so the
Super Video CD specification was called into life. Most notably a switch
from @acronym{MPEG}-1 CBR to @acronym{MPEG}-2 VBR encoding for the video
stream was performed. Based on the Video CD 2.0 features the following
items are new:

@itemize @bullet
@item
Use of @acronym{MPEG}-2 encoding instead of @acronym{MPEG}-1 for the video stream

@item
Allowed VBR encoding of @acronym{MPEG}-1 audio stream

@item
Higher resolutions (see below) for the video stream resolution.

@item
Overlay graphics and text (@dfn{OGT}) sub-channel coding for user
switchable subtitle displaying
@end itemize

@noindent
For the Super Video CD only the following two resolutions are supported
for motion pictures:

@itemize @bullet
@item
480 x 480 @@ 29.97 Hz (@acronym{NTSC})
@item
480 x 576 @@ 25 Hz (@acronym{PAL})
@end itemize

@subsection Extended Super Video CD

Just like the XVCD, and thus also known as @dfn{XSVCD}, this is not an
official standard and may not work with all playing devices supporting
SVCDs.

@chapter Reference

@section @file{vcdimager} Tool

There are a few command-line options for @file{vcdimager} at the moment:
@example
@cartouche
$ vcdimager --help
Usage: vcdimager [OPTION...]
  -t, --type=TYPE                       select VideoCD type ('vcd11', 
                                        'vcd2' or 'svcd') (default: 'vcd2')
  -c, --cue-file=FILE                   specify cue file for output
                                        (default: 'videocd.cue')
  -b, --bin-file=FILE                   specify bin file for output 
                                        (default: 'videocd.bin')
  -l, --iso-volume-label=LABEL          specify ISO volume label for video
                                        cd (default: 'VideoCD')
  --iso-application-id=LABEL            specify ISO application id for 
                                        video cd (default: '')
  --info-album-id=LABEL                 specify album id for video cd set
                                        (default: '')
  --volume-count=NUMBER                 specify number of volumes in 
                                        album set
  --volume-number=NUMBER                specify album set sequence number
                                        (< volume-count)
  --broken-svcd-mode                    enable non-compliant compatibility
                                        mode for broken devices
  --sector-2336                         use 2336 byte sectors for output
  --add-dir=DIR                         add directory contents recursively 
                                        to ISO fs root
  --add-file=FILE,ISO_FILENAME          add single file to ISO fs
  --add-file-2336=FILE,ISO_FILENAME     add file containing full 2336 byte
                                        sectors to ISO fs
  -p, --progress                        show progress
  -v, --verbose                         be verbose
  -q, --quiet                           show only critical messages
  -V, --version                         display version and copyright
                                        information and exit

Help options:
  -?, --help                            Show this help message
  --usage                               Display brief usage message

$
@end cartouche
@end example

@subsection Requirements For input @acronym{MPEG} streams

GNU VCDImager expects @acronym{MPEG} streams in a format suitable for
(Super) Video CD production.

@subsubsection Video CD

The Video CD specification requires the multiplexed @acronym{MPEG}-1
stream to have a bit rate of about 174300 bytes per second. The video
stream is required to have one of the following resolutions:

@itemize @bullet
@item
352 x 240 @@ 29.97 Hz (@acronym{NTSC})
@item
352 x 240 @@ 23.976 Hz (@acronym{FILM})
@item
352 x 288 @@ 25 Hz (@acronym{PAL}) (not supported on VCD 1.x!)
@end itemize

The audio stream must be @acronym{MPEG}-1 layer II, fixed to a 224
kbits/sec @acronym{CBR} with 1 stereo or 2 mono audio channels.

@subsubsection Super Video CD

When creating Super Video CD images @acronym{MPEG}-2 @acronym{VBR}
streams are expected with a maximum allowed bit-rate of ~2.6 mbits/sec.
The following video resolutions are (officially)
supported@footnote{actually you can try other resoulutions as well, but
then you are leaving the SVCD specification behind you...}:

@itemize @bullet
@item
480 x 480 @@ 29.97 Hz (@acronym{NTSC})
@item
480 x 576 @@ 25 Hz (@acronym{PAL})
@end itemize

There are a few other requirements imposed the specification, like the
need to encode scan information as user data in the picture layer of all
intra pictures, and the requirement to precede every I picture by a GOP
header which shall be preceded by a sequence header in its turn and
possibly begin all in the same packet, thus forming a so called access
point sector.

The audio stream must be @acronym{MPEG}-1 layer II, with a bit-rate
ranging from 32 to 384 kbps kbits/sec bit-rate with up to 2 stereo or 4
mono channels, or 1 extended @acronym{MPEG}-1/2 multichannel (5+1)
surround sound stream.

@subsubsection Common Constraints

Furthermore the @acronym{MPEG} files should be aligned to 2324 byte
@acronym{MPEG} packet boundaries. If they aren't GNU VCDImager will 
try to align them on the fly while issuing a warning that padding was needed.

If on-the-fly padding should fail, you can try fixing those files with VCDpad
@footnote{see @url{http://www.nocrew.org/?part=vcdpad}} or any other
program capable of aligning or fixing @acronym{MPEG} packets.

@subsection Adding Files to the Video CD 

Files can be added to the @acronym{ISO} file-system, that is the first
track of the Video CD, by making use of the command-line options
@option{--add-file=@var{FILE},@var{ISO_FILENAME}} and
@option{--add-file-2336=@var{FILE},@var{ISO_FILENAME}}.
The latter option allows you to include files containing the complete
user data of mode 2 CD-ROM sectors
@footnote{8 bytes for sub-header, 2324 bytes payload and finally 4 bytes
for @acronym{EDC}}.

The path name given as @var{ISO_FILENAME} determines where to link the
file in the file-system of the Video CD. The given path name must be a
valid ISO9660 file name with the following restrictions:
@itemize @bullet
@item
The Character set is restricted to upper case letters, numbers, the
underscore @samp{_}, the dot @samp{.} and the slash @samp{/}.

@item
The maximum file name length is restricted to 31 characters, the
directory nesting level is restricted to 8 and the maximum path length
is limited to 255 characters.

@item
File names must contain exactly one dot.@footnote{if no file name
extension is supposed to exist the dot must be placed as a trailing
dot.}

@item
The path-name must not begin or end with a slash. Nor should it contain
slashes following directly each other.

@end itemize

If the parent directory for a file entry does not exist it will be
created automatically on demand.

@subsection CD-i Support
There is no specific CD-i support in GNU VCDImager. But you
can use the general facilities for adding a custom CD-i player
application. 

If you happen to have a CD-i application consisting of the files
@file{cdi_imag.rtf}, @file{cdi_text.fnt}, @file{cdi_vcd.app} and
@file{cdi_vcd.cfg}, with @file{cdi_vcd.app} being the main application
executable, you could add the following lines to your @file{~/.popt}
popt@footnote{see documentation for popt for more information about
option aliasing} aliasing file@footnote{add it to @file{/etc/popt} if
the setting should be available system-wide}

@example
vcdimager alias --cdi \
	--iso-application-id "CDI/CDI_VCD.APP;1" \
	--add-file-2336 /usr/share/cdi/cdi_imag.rtf,CDI/CDI_IMAG.RTF \
	--add-file      /usr/share/cdi/cdi_text.fnt,CDI/CDI_TEXT.FNT \
	--add-file      /usr/share/cdi/cdi_vcd.app,CDI/CDI_VCD.APP \
	--add-file      /usr/share/cdi/cdi_vcd.cfg,CDI/CDI_VCD.CFG 
@end example

@section @file{vcdrip} Tool

The @file{vcdrip} utility offers just a few command line options:
@example
@cartouche
$ vcdrip --help
Usage: vcdrip [OPTION...]
  -b, --bin-file=FILE       set image file as source
  --sector-2336             use 2336 byte sector mode for image file
  --cdrom-device=DEVICE     set CDROM device as source (Linux only)
  -d, --dump                dump information about VideoCD
  --rip                     rip mpeg tracks
  --rip-spi                 rip segment play items
  -v, --verbose             be verbose
  -q, --quiet               show only critical messages
  -V, --version             display version and copyright information
                            and exit

Help options:
  -?, --help                Show this help message
  --usage                   Display brief usage message

$
@end cartouche
@end example

@chapter Examples

@section Simple Multitrack Example

In the following example session, the files @file{track1.mpg},
@file{track2.mpg} and @file{track3.mpg} are mastered into the default
output files @file{videocd.cue} and @file{videocd.bin}. The volume label
is set to `My Test VCD'.

@example
@cartouche
$ vcdimager --iso-volume-label="My Test VCD" track1.mpg track2 track3.mpg 
finished ok, image created with 13421 sectors (31566192 bytes)
$
@end cartouche
@end example

@section @acronym{MPEG} Extraction

The next example show how to extract the @acronym{MPEG} streams
contained in the image file @file{test.bin} (the resulting streams are
stored in files named @file{track_##.mpg} with @samp{##} being the track
number, starting with 0).

@example
@cartouche
$ vcdrip-devel -v --rip --bin-file=test.bin     
--DEBUG: found ENTRIES.VCD/SVD
   INFO: track_00.mpg: 1262 -> 2555
--DEBUG:  stream leadin at 1292
--DEBUG:  stream leadout at 2360
   INFO: track_01.mpg: 2555 -> 101705
--DEBUG:  stream leadin at 2585
--DEBUG:  stream leadout at 101510
   INFO: track_02.mpg: 101705 -> 200994
--DEBUG:  stream leadin at 101735
--DEBUG:  stream leadout at 200799
   INFO: track_03.mpg: 200994 -> 300041
--DEBUG:  stream leadin at 201024
--DEBUG:  stream leadout at 299996
$
@end cartouche
@end example

@appendix Acronym Expansions

@table @acronym

@item CBR
constant bit rate

@item CD
compact disc

@item CD-DA
@acronym{CD} digital audio

@item CD-ROM
@acronym{CD} read only memory

@item DVD
digital versatile/video disc

@item FSF
free software foundation, @url{http://www.fsf.org/}

@item GNU
@acronym{GNU} is not @acronym{UNIX}, @url{http://www.gnu.org/}

@item MPEG
movie picture experts group

@item OGT
overlay graphics & text

@item PBC
playback control

@item PVD
primary volume descriptor

@item SVCD
Super @acronym{VCD}

@item VBR
variable bit rate

@item VCD
Video @acronym{CD}

@item XSVCD
eXtended @acronym{SVCD}

@item XVCD
eXtended @acronym{VCD}

@end table

@bye

to-do:
* add node structure
* grammar check
