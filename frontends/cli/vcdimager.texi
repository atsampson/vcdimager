\input texinfo @c -*-texinfo-*-

@c %**start of header
@setfilename vcdimager.info
@settitle The GNU VideoCD Image Maker
@setchapternewpage off
@c %**end of header

@afourpaper

@include version.texi

@ifinfo
This file documents GNU VCDImager, The GNU VideoCD Image Maker

Copyright (C) Herbert Valerio Riedel @email{hvr@@gnu.org}

@sp 2
Permission is granted to make and distributed verbatim copies of this
manual, provided the copyright notice and this permission notice are
preserved on all copies. 

@ignore
Permission is granted to process this file through TeX and print the 
results, provided the printed document carries copying permission notice 
identical to this one except for the removal of this paragraph (this 
paragraph not being relevant to the printed manual).

@end ignore
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation
approved by Herbert Valerio Riedel.
@end ifinfo

@titlepage
@title GNU VCDImager
@subtitle $Id$
@subtitle The GNU VideoCD Image Maker
@subtitle for version @value{VERSION}, @value{UPDATED}
@author Herbert Valerio Riedel

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2000 Herbert Valerio Riedel @email{<hvr@@gnu.org>}
@sp 1
Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that the
section entitled ``GNU General Public License'' are included exactly as
in the original, and provided that the entire resulting derived work is
distributed under the terms of a permission notice identical to this
one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that the sections entitled ``GNU General Public License'' may be
included in a translation approved by the Free Software Foundation
instead of in the original English.
@end titlepage

@c @summarycontents
@c @contents

@dircategory Miscellaneous
@direntry
* VCDImager: (vcdimager).      The GNU VideoCD Image Maker
* VCDRip: (vcdimager).         The GNU VideoCD Image Ripper
@end direntry

@node Top, , (dir), (dir)

@unnumbered Introduction

@c fixme add node structure

@dfn{GNU VCDImager}@footnote{see
@url{http://www.gnu.org/software/vcdimager/}} is a
tool for pre-mastering @acronym{CDROM} images suitable for being burned
to CD recordables. It takes @acronym{MPEG} movie files as input and
generates an image file and a cuesheet file which can be fed to any
CD-recording program which understands the @acronym{BIN/CUE}-format,
e.g. cdrdao@footnote{see @url{http://www.ping.de/sites/daneb/cdrdao.html}}.

@noindent
Features (so far) include:

@itemize @bullet
@item
Video CD 1.1 image output support

@item
Video CD 2.0 image output support

@item
Super Video CD 1.0 image output support

@item
general facility for adding files as mode 2 form 1 and 2 sectors to
the @acronym{ISO9660} filesystem and setting the @acronym{ISO9660}
volume label and application id fields.

@item
support for up to 98 @acronym{MPEG} tracks per (Super) Video CD.

@end itemize

This packages comes with @dfn{GNU VCDRip}, a tool for showing
information about (Super) Video CD images and extracting the contained
@acronym{MPEG}-streams.

@c fixme write much more :-)

@unnumbered Commandline Options

There are a few commandline options for @file{vcdimager} at the moment:
@example
@cartouche
$ vcdimager --help
Usage: vcdimager [OPTION...]
  -t, --type=TYPE                     select VideoCD type ('vcd11', 'vcd2' 
                                      or 'svcd') (default: 'vcd2')
  --broken-svcd-mode                  enable non-compliant compatibility mode
                                      for broken devices
  -l, --iso-volume-label=LABEL        specify ISO volume label for 
                                      video cd (default: 'VideoCD')
  --iso-application-id=LABEL          specify ISO application id for
                                      video cd (default: '')
  -c, --cue-file=FILE                 specify cue file for output 
                                      (default: 'videocd.cue')
  -b, --bin-file=FILE                 specify bin file for output 
                                      (default: 'videocd.bin')
  --sector-2336                       use 2336 byte sectors for output
  --add-file=FILE,ISO_FILENAME        add file to ISO fs
  --add-file-2336=FILE,ISO_FILENAME   add file containing full 2336 byte
                                      sectors to ISO fs
  -p, --progress                      show progress
  -v, --verbose                       be verbose
  -q, --quiet                         show only critical messages
  -V, --version                       display version and copyright
                                      information and exit

Help options
  -?, --help                          Show this help message
  --usage                             Display brief usage message

$
@end cartouche
@end example

The @file{vcdrip} utility offers just a few arguments:
@example
@cartouche
$ vcdrip
Usage: vcdrip [OPTION...]
  --bin-file=FILE         set image file as source
  --cdrom-device=DEVICE   set CDROM device as source (linux only)
  --dump                  dump information about VideoCD
  --rip                   rip mpeg tracks
  -V, --version           display version and copyright information 
                          and exit

Help options
  -?, --help              Show this help message
  --usage                 Display brief usage message
$
@end cartouche
@end example

@unnumbered Examples

In the following example session, the files @file{track1.mpg},
@file{track2.mpg} and @file{track3.mpg} are mastered into the default
output files @file{videocd.cue} and @file{videocd.bin}. The volume label
is set to `My Test VCD'.

@example
@cartouche
$ vcdimager --iso-volume-label="My Test VCD" track@{1,2,3@}.mpg 
finished ok, image created with 13421 sectors (31566192 bytes)
$
@end cartouche
@end example

Finally, the next example show how to extract the mpeg streams contained
in the same image file @file{test.bin} (the resulting streams are
stored in files named @file{track_##.mpg} with @samp{##} being the track
number, starting with 0).

@example
@cartouche
$ vcdrip-devel --rip --bin-file=test.bin     
--DEBUG: found ENTRIES.VCD/SVD
   INFO: track_00.mpg: 1262 -> 2555
--DEBUG:  stream leadin at 1292
--DEBUG:  stream leadout at 2360
   INFO: track_01.mpg: 2555 -> 101705
--DEBUG:  stream leadin at 2585
--DEBUG:  stream leadout at 101510
   INFO: track_02.mpg: 101705 -> 200994
--DEBUG:  stream leadin at 101735
--DEBUG:  stream leadout at 200799
   INFO: track_03.mpg: 200994 -> 300041
--DEBUG:  stream leadin at 201024
--DEBUG:  stream leadout at 299996
$
@end cartouche
@end example

@unnumbered Requirements For MPEG Streams

GNU VCDImager expects @acronym{MPEG} streams in a format suitable for
(Super) Video CD production.

@unnumberedsec Video CD 2.0

The Video CD 2.0 specification requires the @acronym{MPEG}-1 stream to
have a maximum constant bitrate of 1151929.1 bits/sec and to have one of
the following resolution:

@itemize @bullet
@item
352 x 240 @ 29.97 Hz (@acronym{NTSC})
@item
352 x 240 @ 23.976 Hz (@acronym{FILM})
@item
352 x 288 @ 25 Hz (@acronym{PAL})
@end itemize

The audio stream must be @acronym{MPEG}-1 layer II, fixed to a 224
kbits/sec constant bitrate with 1 stereo or 2 mono channels.

@unnumberedsec Super Video CD

When creating Super Video CD images @acronym{MPEG}-2 @acronym{VBR}
streams are expected with a maximum allowed bitrate of ~2.6 mbits/sec.
The following video resolutions are supported:

@itemize @bullet
@item
480 x 480 @ 29.97 Hz (@acronym{NTSC})
@item
480 x 576 @ 25 Hz (@acronym{PAL})
@end itemize

The audio stream must be @acronym{MPEG}-1 layer II, with a bitrate
ranging from 32 to 384 kbps kbits/sec bitrate with up to 2 stereo or 4
mono channels.

@unnumberedsec Common Constraints

Furthermore the @acronym{MPEG} files need to be aligned to 2324 byte
@acronym{MPEG} packet boundaries. So if GNU VCDImager complains, try
fixing those files with VCDpad
@footnote{see @url{http://www.nocrew.org/?part=vcdpad}} 
or any other program capable of aligning or fixing @acronym{MPEG}
packets.

@unnumbered Adding Files to the VideoCD 

Files can be added to the @acronym{ISO} filesystem, that is the first
track of the VideoCD, by making use of the commandline options
@code{--add-file=@var{FILE},@var{ISO_FILENAME}} and
@code{--add-file-2336=@var{FILE},@var{ISO_FILENAME}}.
The latter option allows you to include files containing the complete
user data of mode2 cdrom sectors
@footnote{8 bytes for subheader, 2324 bytes payload and finaly 4 bytes
for @acronym{EDC}}.

The pathname given as @var{ISO_FILENAME} determines where to link the
file in the filesystem of the VideoCD. The given pathname must be a
valid ISO9660 filename with the following restrictions:
@itemize @bullet
@item
The Character set restricted to upper case letters, numbers, the
underscore @samp{_}, the dot @samp{.} and the slash @samp{/}.

@item
The maximum filename length is restricted to 31 characters, the
directory nesting level is restricted to 8 and the maximum path length
is limited to 255 characters.

@item
Filenames must contain exactly one dot.@footnote{If no filename
extension is supposed to exist the dot must be placed as a trailing
dot.}

@item
The pathname must not begin or end with a slash. Nor should it contain
slashes following directly each other.

@end itemize

If the parent directory for a file entry does not exist it will be
created automatically on demand.

@unnumbered CD-i Support

There is no specific CD-i support in GNU VCDImager. But you
can use the general facilites for adding a custom CD-i player
application. 

Say you had a CD-i application consisting of the files
@file{cdi_imag.rtf}, @file{cdi_text.fnt}, @file{cdi_vcd.app} and
@file{cdi_vcd.cfg}, with @file{cdi_vcd.app} being the main application
executable, you could add the following lines to your @file{~/.popt}
popt@footnote{see documentation for popt for more information about
option aliasing} aliasing file@footnote{add it to @file{/etc/popt} if
the setting should be available system-wide}

@example
vcdimager alias --cdi \
	--iso-application-id "CDI/CDI_VCD.APP;1" \
	--add-file-2336 /usr/share/cdi/cdi_imag.rtf,CDI/CDI_IMAG.RTF \
	--add-file      /usr/share/cdi/cdi_text.fnt,CDI/CDI_TEXT.FNT \
	--add-file      /usr/share/cdi/cdi_vcd.app,CDI/CDI_VCD.APP \
	--add-file      /usr/share/cdi/cdi_vcd.app,CDI/CDI_VCD.CFG 
@end example

@bye
